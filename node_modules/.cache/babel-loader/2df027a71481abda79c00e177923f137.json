{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\music-app\\\\src\\\\components\\\\UploadFiles\\\\index.jsx\";\nimport React, { Component } from 'react';\n\nclass UploadFiles extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeFiles = e => {\n      if (e.target.files[0]) {\n        setFiless(e.target.files[0]);\n      }\n    };\n\n    this.onSave = () => {\n      const uploadTask = storage.ref(`Audios/${files.name}`).put(filesAudio);\n      uploadTask.on(\"state_changed\", snapshot => {}, error => {\n        console.log('err', error);\n      }, () => {\n        storage.ref(`Audios`).child(files.name).getDownloadURL().then(url => {\n          setSrcAudio(url);\n        });\n      });\n    };\n\n    this.onUploadDatabase = () => {\n      const databaseRef = database.ref('Audios');\n      databaseRef.push({\n        src: srcAudio\n      });\n    };\n\n    this.state = {\n      filesAudio: null,\n      filesImage: null,\n      singerName: '',\n      progressBar: 0,\n      urlAudio: null,\n      urlImage: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"test\",\n        onChange: handleChangeFiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onUploadDatabase,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UploadFiles;","map":{"version":3,"sources":["D:/music-app/src/components/UploadFiles/index.jsx"],"names":["React","Component","UploadFiles","constructor","props","handleChangeFiles","e","target","files","setFiless","onSave","uploadTask","storage","ref","name","put","filesAudio","on","snapshot","error","console","log","child","getDownloadURL","then","url","setSrcAudio","onUploadDatabase","databaseRef","database","push","src","srcAudio","state","filesImage","singerName","progressBar","urlAudio","urlImage","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAChCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,iBAXmB,GAWEC,CAAD,IAAO;AACvB,UAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAJ,EAAuB;AACnBC,QAAAA,SAAS,CAACH,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAT;AACH;AACJ,KAfkB;;AAAA,SAgBnBE,MAhBmB,GAgBV,MAAM;AACX,YAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAa,UAASL,KAAK,CAACM,IAAK,EAAjC,EAAoCC,GAApC,CAAwCC,UAAxC,CAAnB;AACAL,MAAAA,UAAU,CAACM,EAAX,CACI,eADJ,EAEIC,QAAQ,IAAI,CAAG,CAFnB,EAGIC,KAAK,IAAI;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,KAAnB;AACH,OALL,EAMI,MAAM;AACFP,QAAAA,OAAO,CACFC,GADL,CACU,QADV,EAEKS,KAFL,CAEWd,KAAK,CAACM,IAFjB,EAGKS,cAHL,GAIKC,IAJL,CAIUC,GAAG,IAAI;AACTC,UAAAA,WAAW,CAACD,GAAD,CAAX;AACH,SANL;AAOH,OAdL;AAgBH,KAlCkB;;AAAA,SAmCnBE,gBAnCmB,GAmCA,MAAM;AACrB,YAAMC,WAAW,GAAGC,QAAQ,CAAChB,GAAT,CAAa,QAAb,CAApB;AACAe,MAAAA,WAAW,CAACE,IAAZ,CAAiB;AACbC,QAAAA,GAAG,EAAEC;AADQ,OAAjB;AAGH,KAxCkB;;AAEf,SAAKC,KAAL,GAAa;AACTjB,MAAAA,UAAU,EAAE,IADH;AAETkB,MAAAA,UAAU,EAAE,IAFH;AAGTC,MAAAA,UAAU,EAAE,EAHH;AAITC,MAAAA,WAAW,EAAE,CAJJ;AAKTC,MAAAA,QAAQ,EAAE,IALD;AAMTC,MAAAA,QAAQ,EAAE;AAND,KAAb;AAQH;;AA+BDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAC,MAFP;AAGI,QAAA,QAAQ,EAAElC;AAHd;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AACI,QAAA,OAAO,EAAEK,MADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI;AACI,QAAA,OAAO,EAAEiB,gBADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AAzD+B;;AA4DpC,eAAezB,WAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass UploadFiles extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filesAudio: null,\r\n            filesImage: null,\r\n            singerName: '',\r\n            progressBar: 0,\r\n            urlAudio: null,\r\n            urlImage: null\r\n        }\r\n    }\r\n    handleChangeFiles = (e) => {\r\n        if (e.target.files[0]) {\r\n            setFiless(e.target.files[0]);\r\n        }\r\n    }\r\n    onSave = () => {\r\n        const uploadTask = storage.ref(`Audios/${files.name}`).put(filesAudio);\r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            snapshot => { },\r\n            error => {\r\n                console.log('err', error);\r\n            },\r\n            () => {\r\n                storage\r\n                    .ref(`Audios`)\r\n                    .child(files.name)\r\n                    .getDownloadURL()\r\n                    .then(url => {\r\n                        setSrcAudio(url);\r\n                    })\r\n            }\r\n        )\r\n    }\r\n    onUploadDatabase = () => {\r\n        const databaseRef = database.ref('Audios');\r\n        databaseRef.push({\r\n            src: srcAudio\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"test\"\r\n                    onChange={handleChangeFiles} />\r\n                <button\r\n                    onClick={onSave}\r\n                >Save</button>\r\n                <button\r\n                    onClick={onUploadDatabase}\r\n                >Upload</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UploadFiles;"]},"metadata":{},"sourceType":"module"}