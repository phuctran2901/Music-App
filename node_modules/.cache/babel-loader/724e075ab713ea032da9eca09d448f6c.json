{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\music-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport UploadFiles from './components/UploadFiles';\nimport AudioItems from './components/AudioItems';\nimport TimeSlider from 'react-input-slider';\nimport { database } from './configFirebase';\nimport { AiOutlinePauseCircle, AiOutlinePlayCircle } from 'react-icons/ai';\nimport { BiSkipNextCircle, BiSkipPreviousCircle } from 'react-icons/bi';\nimport { IconContext } from 'react-icons/lib';\nconst databaseRef = database.ref('Audios');\n\nfunction App() {\n  _s();\n\n  const audioRef = useRef();\n  const [playAndPauseAudio, setplayAndPauseAudio] = useState(true);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [audios, setAudios] = useState([{\n    src: '',\n    image: '',\n    title: 'Vui lòng chờ',\n    artist: '',\n    id: 0\n  }]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        databaseRef.once('value').then(res => {\n          const data = [];\n          const keys = Object.keys(res.val());\n          const values = Object.values(res.val());\n          keys.map((key, index) => {\n            values[index].id = key;\n            data.push(values[index]);\n            return data;\n          });\n          setAudios(data);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    ;\n    fetchData();\n  }, []);\n\n  const handleOnChangeSlider = ({\n    x\n  }) => {\n    audioRef.current.currentTime = x;\n    console.log(x);\n\n    if (!playAndPauseAudio) {\n      setplayAndPauseAudio(true);\n      audioRef.current.play();\n    }\n  };\n\n  const onClickAudio = () => {\n    if (playAndPauseAudio) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n\n    setplayAndPauseAudio(!playAndPauseAudio);\n  };\n\n  const handleOnLoadedData = () => {\n    setDuration(audioRef.current.duration);\n  };\n\n  const renderTime = () => {\n    let html = null;\n    let cMinute = Math.floor(currentTime / 60);\n    let cSecond = Math.floor(currentTime % 60);\n    let dMinute = Math.floor(duration / 60);\n    let dSecond = Math.floor(duration % 60);\n    let cTime = `${cMinute} : ${cSecond < 10 ? `0${cSecond}` : `${cSecond}`}`;\n    let dTime = `${dMinute} : ${dSecond < 10 ? `0${dSecond}` : `${dSecond}`}`;\n    html = `${cTime} / ${dTime}`;\n    return html;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-w\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-audio\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"audio-img\",\n        src: audios[0].image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"audio-name\",\n        children: audios[0].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"audio-artist\",\n        children: audios[0].artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: audios[0].src,\n        onLoadedData: handleOnLoadedData,\n        onTimeUpdate: () => {\n          setCurrentTime(audioRef.current.currentTime);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"audio-time\",\n        children: renderTime()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"audio-button\",\n          onClick: onClickAudio,\n          children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n            value: {\n              size: 40\n            },\n            children: /*#__PURE__*/_jsxDEV(BiSkipPreviousCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"audio-button\",\n          onClick: onClickAudio,\n          children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n            value: {\n              size: 40\n            },\n            children: playAndPauseAudio ? /*#__PURE__*/_jsxDEV(AiOutlinePlayCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 50\n            }, this) : /*#__PURE__*/_jsxDEV(AiOutlinePauseCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 76\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"audio-button\",\n          onClick: onClickAudio,\n          children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n            value: {\n              size: 40\n            },\n            children: /*#__PURE__*/_jsxDEV(BiSkipNextCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TimeSlider, {\n      axis: \"x\",\n      x: currentTime,\n      xMax: duration,\n      onChange: handleOnChangeSlider,\n      styles: {\n        track: {\n          backgroundColor: \"#e3e3e3\",\n          height: \"4px\"\n        },\n        active: {\n          backgroundColor: \"#333\",\n          height: \"4px\"\n        },\n        thumb: {\n          width: \"20px\",\n          height: \"20px\",\n          backgroundColor: \"#333\",\n          borderRadius: 0\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-song\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-song\",\n        children: \"List Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AudioItems, {\n        data: audios\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"iap8FPKDE2rk02lPg9h/wcsAu4A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/music-app/src/App.js"],"names":["useEffect","useRef","useState","UploadFiles","AudioItems","TimeSlider","database","AiOutlinePauseCircle","AiOutlinePlayCircle","BiSkipNextCircle","BiSkipPreviousCircle","IconContext","databaseRef","ref","App","audioRef","playAndPauseAudio","setplayAndPauseAudio","currentTime","setCurrentTime","duration","setDuration","audios","setAudios","src","image","title","artist","id","fetchData","once","then","res","data","keys","Object","val","values","map","key","index","push","err","console","log","handleOnChangeSlider","x","current","play","onClickAudio","pause","handleOnLoadedData","renderTime","html","cMinute","Math","floor","cSecond","dMinute","dSecond","cTime","dTime","name","size","track","backgroundColor","height","active","thumb","width","borderRadius"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport UploadFiles from './components/UploadFiles';\nimport AudioItems from './components/AudioItems';\nimport TimeSlider from 'react-input-slider';\nimport { database } from './configFirebase';\nimport {\n    AiOutlinePauseCircle,\n    AiOutlinePlayCircle\n} from 'react-icons/ai';\nimport {\n    BiSkipNextCircle,\n    BiSkipPreviousCircle\n} from 'react-icons/bi'\nimport { IconContext } from 'react-icons/lib';\n\nconst databaseRef = database.ref('Audios');\nfunction App() {\n    const audioRef = useRef();\n    const [playAndPauseAudio, setplayAndPauseAudio] = useState(true);\n    const [currentTime, setCurrentTime] = useState(0);\n    const [duration, setDuration] = useState(0);\n    const [audios, setAudios] = useState([\n        {\n            src: '',\n            image: '',\n            title: 'Vui lòng chờ',\n            artist: '',\n            id: 0\n        }\n    ])\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                databaseRef.once('value').then(res => {\n                    const data = [];\n                    const keys = Object.keys(res.val());\n                    const values = Object.values(res.val());\n                    keys.map((key, index) => {\n                        values[index].id = key;\n                        data.push(values[index]);\n                        return data;\n                    })\n                    setAudios(data);\n                })\n            }\n            catch (err) {\n                console.log(err);\n            }\n        };\n        fetchData();\n    }, [])\n    const handleOnChangeSlider = ({ x }) => {\n        audioRef.current.currentTime = x;\n        console.log(x);\n        if (!playAndPauseAudio) {\n            setplayAndPauseAudio(true);\n            audioRef.current.play();\n        }\n    }\n    const onClickAudio = () => {\n        if (playAndPauseAudio) {\n            audioRef.current.play();\n        } else {\n            audioRef.current.pause();\n        }\n        setplayAndPauseAudio(!playAndPauseAudio);\n    }\n    const handleOnLoadedData = () => {\n        setDuration(audioRef.current.duration);\n    }\n    const renderTime = () => {\n        let html = null;\n        let cMinute = Math.floor(currentTime / 60);\n        let cSecond = Math.floor(currentTime % 60);\n        let dMinute = Math.floor(duration / 60);\n        let dSecond = Math.floor(duration % 60);\n        let cTime = `${cMinute} : ${cSecond < 10 ? `0${cSecond}` : `${cSecond}`\n            }`;\n        let dTime = `${dMinute} : ${dSecond < 10 ? `0${dSecond}` : `${dSecond}`\n            }`;\n        html = `${cTime} / ${dTime}`;\n        return html;\n    }\n    return (\n        <div className=\"container-w\">\n            <div className=\"wrapper-audio\">\n                <img className=\"audio-img\" src={audios[0].image} />\n                <p className=\"audio-name\">{audios[0].name}</p>\n                <p className=\"audio-artist\">{audios[0].artist}</p>\n                <audio\n                    ref={audioRef}\n                    src={audios[0].src}\n                    onLoadedData={handleOnLoadedData}\n                    onTimeUpdate={() => {\n                        setCurrentTime(audioRef.current.currentTime)\n                    }}\n                ></audio>\n                <p className=\"audio-time\">\n                    {renderTime()}\n                </p>\n                <div className=\"audio-controls\">\n                    <button className=\"audio-button\" onClick={onClickAudio}>\n                        <IconContext.Provider value={{ size: 40 }}>\n                            <BiSkipPreviousCircle />\n                        </IconContext.Provider>\n                    </button>\n                    <button className=\"audio-button\" onClick={onClickAudio}>\n                        <IconContext.Provider value={{ size: 40 }}>\n                            {playAndPauseAudio ? <AiOutlinePlayCircle /> : <AiOutlinePauseCircle />}\n                        </IconContext.Provider>\n                    </button>\n                    <button className=\"audio-button\" onClick={onClickAudio}>\n                        <IconContext.Provider value={{ size: 40 }}>\n                            <BiSkipNextCircle />\n                        </IconContext.Provider>\n                    </button>\n                </div>\n            </div>\n            <TimeSlider\n                axis=\"x\"\n                x={currentTime}\n                xMax={duration}\n                onChange={handleOnChangeSlider}\n                styles={{\n                    track: {\n                        backgroundColor: \"#e3e3e3\",\n                        height: \"4px\",\n                    },\n                    active: {\n                        backgroundColor: \"#333\",\n                        height: \"4px\",\n                    },\n                    thumb: {\n                        width: \"20px\",\n                        height: \"20px\",\n                        backgroundColor: \"#333\",\n                        borderRadius: 0,\n                    },\n                }}\n            />\n            <div className=\"wrapper-song\">\n                <p className=\"title-song\">List Audio</p>\n                <AudioItems data={audios} />\n            </div>\n        </div>\n\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}