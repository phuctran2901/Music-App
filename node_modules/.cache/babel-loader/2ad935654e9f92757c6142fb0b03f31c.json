{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\music-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport firebase, { storage, database } from './config';\nimport { useState } from 'react';\n\nfunction App() {\n  _s();\n\n  const [files, setFiless] = useState(null);\n  const [srcAudio, setSrcAudio] = useState(null);\n\n  const handleChangeFiles = e => {\n    if (e.target.files[0]) {\n      setFiless(e.target.files[0]);\n    }\n  };\n\n  const onSave = () => {\n    console.log('save');\n    const uploadTask = storage.ref(`Audios/${files.name}`).put(files);\n    uploadTask.on(\"state_changed\", snapshot => {}, error => {\n      console.log('err', error);\n    }, () => {\n      storage.ref(`Audios`).child(files.name).getDownloadURL().then(url => {\n        setSrcAudio(url);\n      });\n    });\n  };\n\n  const onUploadDatabase = () => {\n    const databaseRef = database.ref('Audios');\n    databaseRef.push({\n      src: srcAudio\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"test\",\n      onChange: handleChangeFiles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onUploadDatabase,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"klmmPRmGBTwDf0Xsx2AeSPWxc6o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/music-app/src/App.js"],"names":["firebase","storage","database","useState","App","files","setFiless","srcAudio","setSrcAudio","handleChangeFiles","e","target","onSave","console","log","uploadTask","ref","name","put","on","snapshot","error","child","getDownloadURL","then","url","onUploadDatabase","databaseRef","push","src"],"mappings":";;;;;;AACA,OAAO,WAAP;AACA,OAAOA,QAAP,IAAmBC,OAAnB,EAA4BC,QAA5B,QAA4C,UAA5C;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,KAAD,EAAQC,SAAR,IAAqBH,QAAQ,CAAC,IAAD,CAAnC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;;AACA,QAAMM,iBAAiB,GAAIC,CAAD,IAAO;AAC7B,QAAIA,CAAC,CAACC,MAAF,CAASN,KAAT,CAAe,CAAf,CAAJ,EAAuB;AACnBC,MAAAA,SAAS,CAACI,CAAC,CAACC,MAAF,CAASN,KAAT,CAAe,CAAf,CAAD,CAAT;AACH;AACJ,GAJD;;AAKA,QAAMO,MAAM,GAAG,MAAM;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,UAAMC,UAAU,GAAGd,OAAO,CAACe,GAAR,CAAa,UAASX,KAAK,CAACY,IAAK,EAAjC,EAAoCC,GAApC,CAAwCb,KAAxC,CAAnB;AACAU,IAAAA,UAAU,CAACI,EAAX,CACI,eADJ,EAEIC,QAAQ,IAAI,CAAG,CAFnB,EAGIC,KAAK,IAAI;AACLR,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBO,KAAnB;AACH,KALL,EAMI,MAAM;AACFpB,MAAAA,OAAO,CACFe,GADL,CACU,QADV,EAEKM,KAFL,CAEWjB,KAAK,CAACY,IAFjB,EAGKM,cAHL,GAIKC,IAJL,CAIUC,GAAG,IAAI;AACTjB,QAAAA,WAAW,CAACiB,GAAD,CAAX;AACH,OANL;AAOH,KAdL;AAgBH,GAnBD;;AAoBA,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,UAAMC,WAAW,GAAGzB,QAAQ,CAACc,GAAT,CAAa,QAAb,CAApB;AACAW,IAAAA,WAAW,CAACC,IAAZ,CAAiB;AACbC,MAAAA,GAAG,EAAEtB;AADQ,KAAjB;AAGH,GALD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,EAAE,EAAC,MAFP;AAGI,MAAA,QAAQ,EAAEE;AAHd;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AACI,MAAA,OAAO,EAAEG,MADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AACI,MAAA,OAAO,EAAEc,gBADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAhDQtB,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport firebase, { storage, database } from './config';\nimport { useState } from 'react';\n\nfunction App() {\n    const [files, setFiless] = useState(null);\n    const [srcAudio, setSrcAudio] = useState(null);\n    const handleChangeFiles = (e) => {\n        if (e.target.files[0]) {\n            setFiless(e.target.files[0]);\n        }\n    }\n    const onSave = () => {\n        console.log('save')\n        const uploadTask = storage.ref(`Audios/${files.name}`).put(files);\n        uploadTask.on(\n            \"state_changed\",\n            snapshot => { },\n            error => {\n                console.log('err', error);\n            },\n            () => {\n                storage\n                    .ref(`Audios`)\n                    .child(files.name)\n                    .getDownloadURL()\n                    .then(url => {\n                        setSrcAudio(url);\n                    })\n            }\n        )\n    }\n    const onUploadDatabase = () => {\n        const databaseRef = database.ref('Audios');\n        databaseRef.push({\n            src: srcAudio\n        })\n    }\n    return (\n        <div className=\"App\">\n            <input\n                type=\"file\"\n                id=\"test\"\n                onChange={handleChangeFiles} />\n            <button\n                onClick={onSave}\n            >Save</button>\n            <button\n                onClick={onUploadDatabase}\n            >Upload</button>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}