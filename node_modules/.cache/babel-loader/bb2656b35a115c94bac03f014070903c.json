{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\music-app\\\\src\\\\components\\\\UploadFiles\\\\index.jsx\";\nimport React, { PureComponent } from 'react';\nimport { storage, database } from '../../configFirebase';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport './style.css';\nimport { IconContext } from 'react-icons/lib';\nexport default class UploadFiles extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeFiles = e => {\n      if (e.target.name === \"fileAudio\" || e.target.name === \"fileImage\") {\n        this.setState({\n          [e.target.name]: e.target.files[0]\n        });\n      } else {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n      }\n    };\n\n    this.handleSaveAudio = () => {\n      const {\n        fileAudio\n      } = this.state;\n\n      if (fileAudio) {\n        const uploadTask = storage.ref(`Audios/${fileAudio.name}`).put(fileAudio);\n        uploadTask.on(\"state_changed\", snapshot => {\n          const progressBarAudio = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n          this.setState({\n            progressBarAudio\n          });\n        }, error => {\n          console.log('err', error);\n        }, () => {\n          storage.ref(`Audios`).child(fileAudio.name).getDownloadURL().then(urlAudio => {\n            this.setState = {\n              urlAudio\n            };\n          });\n        });\n      } else {\n        console.log('err');\n      }\n    };\n\n    this.handleSaveImage = () => {\n      const {\n        fileImage\n      } = this.state;\n\n      if (fileImage) {\n        const uploadTask = storage.ref(`Images/${fileImage.name}`).put(fileImage);\n        uploadTask.on(\"state_changed\", snapshot => {\n          const progressBarImage = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n          this.setState({\n            progressBarImage\n          });\n        }, error => {\n          console.log('err', error);\n        }, () => {\n          storage.ref(`Images`).child(fileImage.name).getDownloadURL().then(urlImage => {\n            this.setState = {\n              urlImage\n            };\n          });\n        });\n      } else {\n        console.log('err');\n      }\n    };\n\n    this.onUploadDatabase = () => {\n      const databaseRef = database.ref('Audios');\n      databaseRef.push({});\n    };\n\n    this.state = {\n      fileAudio: null,\n      fileImage: null,\n      ArtistName: '',\n      AudioName: '',\n      progressBarAudio: 0,\n      progressBarImage: 0,\n      urlAudio: null,\n      urlImage: null\n    };\n  }\n\n  render() {\n    const {\n      progressBarAudio,\n      progressBarImage,\n      fileImage,\n      fileAudio\n    } = this.state;\n    console.log(progressBarAudio, progressBarImage);\n    console.log(fileAudio);\n    console.log(fileImage);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"files-title\",\n        children: \"Upload Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper-audio\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"files-name\",\n          children: \"Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"fileAudio\",\n          accept: \".mp3\",\n          className: \"files-input\",\n          onChange: this.handleChangeFiles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"files-button\",\n          onClick: this.handleSaveAudio,\n          children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n            value: {\n              size: 20,\n              color: '#ffffff'\n            },\n            children: /*#__PURE__*/_jsxDEV(FaCloudUploadAlt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          style: {\n            height: '8px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar progress-bar-striped \",\n            role: \"progressbar\",\n            \"aria-valuemin\": \"0\",\n            \"aria-valuemax\": \"100\",\n            style: {\n              width: `${this.state.progressBarAudio}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper-image\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"files-name\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \".jpg\",\n          type: \"file\",\n          name: \"fileImage\",\n          className: \"files-input\",\n          onChange: this.handleChangeFiles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"files-button\",\n          onClick: this.handleSaveImage,\n          children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n            value: {\n              size: 20,\n              color: '#ffffff'\n            },\n            children: /*#__PURE__*/_jsxDEV(FaCloudUploadAlt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          style: {\n            height: '8px',\n            Backgroundcolor: '#56184d'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: '#56184d'\n            },\n            className: \"progress-bar progress-bar-striped\",\n            role: \"progressbar\",\n            \"aria-valuemin\": \"0\",\n            \"aria-valuemax\": \"100\",\n            style: {\n              width: `${this.state.progressBarImage}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Artist Name\",\n          onChange: this.handleChangeFiles,\n          value: this.state.ArtistName,\n          name: \"ArtistName\",\n          className: \"files-text\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Audio Name\",\n          value: this.state.AudioName,\n          onChange: this.handleChangeFiles,\n          name: \"AudioName\",\n          className: \"files-text\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"files-button__upload\",\n          onClick: this.onUploadDatabase,\n          children: \"L\\u01B0u l\\u1EA1i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/music-app/src/components/UploadFiles/index.jsx"],"names":["React","PureComponent","storage","database","FaCloudUploadAlt","IconContext","UploadFiles","constructor","props","handleChangeFiles","e","target","name","setState","files","value","handleSaveAudio","fileAudio","state","uploadTask","ref","put","on","snapshot","progressBarAudio","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","urlAudio","handleSaveImage","fileImage","progressBarImage","urlImage","onUploadDatabase","databaseRef","push","ArtistName","AudioName","render","size","color","height","width","Backgroundcolor","backgroundColor"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { storage, database } from '../../configFirebase';\r\nimport { FaCloudUploadAlt } from 'react-icons/fa';\r\nimport './style.css';\r\nimport { IconContext } from 'react-icons/lib';\r\nexport default class UploadFiles extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileAudio: null,\r\n            fileImage: null,\r\n            ArtistName: '',\r\n            AudioName: '',\r\n            progressBarAudio: 0,\r\n            progressBarImage: 0,\r\n            urlAudio: null,\r\n            urlImage: null\r\n        }\r\n    }\r\n    handleChangeFiles = (e) => {\r\n        if (e.target.name === \"fileAudio\" || e.target.name === \"fileImage\") {\r\n            this.setState({\r\n                [e.target.name]: e.target.files[0],\r\n            });\r\n        } else {\r\n            this.setState({\r\n                [e.target.name]: e.target.value,\r\n            });\r\n        }\r\n    }\r\n    handleSaveAudio = () => {\r\n        const { fileAudio } = this.state;\r\n        if (fileAudio) {\r\n            const uploadTask = storage.ref(`Audios/${fileAudio.name}`).put(fileAudio);\r\n            uploadTask.on(\r\n                \"state_changed\",\r\n                (snapshot) => {\r\n                    const progressBarAudio = Math.round(\r\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                    );\r\n                    this.setState({ progressBarAudio });\r\n                },\r\n                error => {\r\n                    console.log('err', error);\r\n                },\r\n                () => {\r\n                    storage\r\n                        .ref(`Audios`)\r\n                        .child(fileAudio.name)\r\n                        .getDownloadURL()\r\n                        .then(urlAudio => {\r\n                            this.setState = {\r\n                                urlAudio\r\n                            }\r\n                        })\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            console.log('err')\r\n        }\r\n    }\r\n    handleSaveImage = () => {\r\n        const { fileImage } = this.state;\r\n        if (fileImage) {\r\n            const uploadTask = storage.ref(`Images/${fileImage.name}`).put(fileImage);\r\n            uploadTask.on(\r\n                \"state_changed\",\r\n                (snapshot) => {\r\n                    const progressBarImage = Math.round(\r\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                    );\r\n                    this.setState({ progressBarImage });\r\n                },\r\n                error => {\r\n                    console.log('err', error);\r\n                },\r\n                () => {\r\n                    storage\r\n                        .ref(`Images`)\r\n                        .child(fileImage.name)\r\n                        .getDownloadURL()\r\n                        .then(urlImage => {\r\n                            this.setState = {\r\n                                urlImage\r\n                            }\r\n                        })\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            console.log('err')\r\n        }\r\n    }\r\n    onUploadDatabase = () => {\r\n        const databaseRef = database.ref('Audios');\r\n        databaseRef.push({\r\n\r\n        })\r\n    }\r\n    render() {\r\n        const { progressBarAudio, progressBarImage, fileImage, fileAudio } = this.state;\r\n        console.log(progressBarAudio, progressBarImage)\r\n        console.log(fileAudio)\r\n        console.log(fileImage)\r\n        return (\r\n            <div className=\"form-upload\">\r\n                <p className=\"files-title\">Upload Files</p>\r\n                <div className=\"wrapper-audio\">\r\n                    <span className=\"files-name\">Audio</span>\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"fileAudio\"\r\n                        accept=\".mp3\"\r\n                        className=\"files-input\"\r\n                        onChange={this.handleChangeFiles} />\r\n                    <button\r\n                        className=\"files-button\"\r\n                        onClick={this.handleSaveAudio}\r\n                    >\r\n                        <IconContext.Provider value={{ size: 20, color: '#ffffff' }}>\r\n                            <FaCloudUploadAlt />\r\n                        </IconContext.Provider>\r\n                    </button>\r\n                    <div className=\"progress\" style={{ height: '8px', }}>\r\n                        <div\r\n                            className=\"progress-bar progress-bar-striped \"\r\n                            role=\"progressbar\"\r\n                            aria-valuemin=\"0\"\r\n                            aria-valuemax=\"100\"\r\n                            style={{ width: `${this.state.progressBarAudio}%` }}>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"wrapper-image\">\r\n                    <span className=\"files-name\">Image</span>\r\n                    <input\r\n                        accept=\".jpg\"\r\n                        type=\"file\"\r\n                        name=\"fileImage\"\r\n                        className=\"files-input\"\r\n                        onChange={this.handleChangeFiles} />\r\n                    <button\r\n                        className=\"files-button\"\r\n                        onClick={this.handleSaveImage}\r\n                    >\r\n                        <IconContext.Provider value={{ size: 20, color: '#ffffff' }}>\r\n                            <FaCloudUploadAlt />\r\n                        </IconContext.Provider>\r\n                    </button>\r\n                    <div className=\"progress\" style={{ height: '8px', Backgroundcolor: '#56184d' }}>\r\n                        <div\r\n                            style={{ backgroundColor: '#56184d' }}\r\n                            className=\"progress-bar progress-bar-striped\"\r\n                            role=\"progressbar\"\r\n                            aria-valuemin=\"0\"\r\n                            aria-valuemax=\"100\"\r\n                            style={{ width: `${this.state.progressBarImage}%` }}>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"wrapper-upload\">\r\n                    <input\r\n                        placeholder=\"Artist Name\"\r\n                        onChange={this.handleChangeFiles}\r\n                        value={this.state.ArtistName}\r\n                        name=\"ArtistName\"\r\n                        className=\"files-text\"\r\n                        type=\"text\" />\r\n                    <input\r\n                        placeholder=\"Audio Name\"\r\n                        value={this.state.AudioName}\r\n                        onChange={this.handleChangeFiles}\r\n                        name=\"AudioName\"\r\n                        className=\"files-text\"\r\n                        type=\"text\" />\r\n                    <button\r\n                        className=\"files-button__upload\"\r\n                        onClick={this.onUploadDatabase}\r\n                    >Lưu lại</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}