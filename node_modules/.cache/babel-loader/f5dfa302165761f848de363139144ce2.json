{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\music-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport UploadFiles from './components/UploadFiles';\nimport AudioItems from './components/AudioItems';\nimport { TimeSlider } from 'react-time-range-slider';\nimport { database } from './configFirebase';\nconst databaseRef = database.ref('Audios');\n\nfunction App() {\n  _s();\n\n  const audioRef = useRef();\n  const [audios, setAudios] = useState([{\n    src: '',\n    image: '',\n    title: 'Vui lòng chờ',\n    artist: '',\n    id: 0\n  }]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        databaseRef.once('value').then(res => {\n          const data = [];\n          const keys = Object.keys(res.val());\n          const values = Object.values(res.val());\n          keys.map((key, index) => {\n            values[index].id = key;\n            data.push(values[index]);\n            return data;\n          });\n          setAudios(data);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    ;\n    fetchData();\n  }, []);\n\n  const onClickAudio = () => {\n    audioRef.current.isPlay();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-w\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-audio\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"audio-img\",\n        src: audios[0].image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"audio-name\",\n        children: audios[0].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"audio-artist\",\n        children: audios[0].artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: audios[0].src\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"test\",\n        onClick: onClickAudio,\n        children: \"Click\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-song\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-song\",\n        children: \"List Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AudioItems, {\n        data: audios\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"jtdtTZbVqiqWVLy5mZciWvvmxms=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/music-app/src/App.js"],"names":["useEffect","useRef","useState","UploadFiles","AudioItems","TimeSlider","database","databaseRef","ref","App","audioRef","audios","setAudios","src","image","title","artist","id","fetchData","once","then","res","data","keys","Object","val","values","map","key","index","push","err","console","log","onClickAudio","current","isPlay","name"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport UploadFiles from './components/UploadFiles';\nimport AudioItems from './components/AudioItems';\nimport { TimeSlider } from 'react-time-range-slider';\nimport { database } from './configFirebase';\n\nconst databaseRef = database.ref('Audios');\nfunction App() {\n    const audioRef = useRef();\n    const [audios, setAudios] = useState([\n        {\n            src: '',\n            image: '',\n            title: 'Vui lòng chờ',\n            artist: '',\n            id: 0\n        }\n    ])\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                databaseRef.once('value').then(res => {\n                    const data = [];\n                    const keys = Object.keys(res.val());\n                    const values = Object.values(res.val());\n                    keys.map((key, index) => {\n                        values[index].id = key;\n                        data.push(values[index]);\n                        return data;\n                    })\n                    setAudios(data);\n                })\n            }\n            catch (err) {\n                console.log(err);\n            }\n        };\n        fetchData();\n    }, [])\n    const onClickAudio = () => {\n        audioRef.current.isPlay();\n    }\n    return (\n        <div className=\"container-w\">\n            <div className=\"wrapper-audio\">\n                <img className=\"audio-img\" src={audios[0].image} />\n                <p className=\"audio-name\">{audios[0].name}</p>\n                <p className=\"audio-artist\">{audios[0].artist}</p>\n                <audio src={audios[0].src} ></audio>\n                <button className=\"test\" onClick={onClickAudio}>Click</button>\n            </div>\n            <div className=\"wrapper-song\">\n                <p className=\"title-song\">List Audio</p>\n                <AudioItems data={audios} />\n            </div>\n        </div>\n\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}