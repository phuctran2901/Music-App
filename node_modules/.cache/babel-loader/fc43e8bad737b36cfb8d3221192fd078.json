{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\music-app\\\\src\\\\components\\\\UploadFiles\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { storage, database } from '../../configFirebase';\nimport { useState } from 'react';\n\nfunction UploadFiles() {\n  _s();\n\n  const [files, setFiless] = useState(null);\n  const [srcAudio, setSrcAudio] = useState(null);\n\n  const handleChangeFiles = e => {\n    if (e.target.files[0]) {\n      setFiless(e.target.files[0]);\n    }\n  };\n\n  const onSave = () => {\n    const uploadTask = storage.ref(`Audios/${files.name}`).put(files);\n    uploadTask.on(\"state_changed\", snapshot => {}, error => {\n      console.log('err', error);\n    }, () => {\n      storage.ref(`Audios`).child(files.name).getDownloadURL().then(url => {\n        setSrcAudio(url);\n      });\n    });\n  };\n\n  const onUploadDatabase = () => {\n    const databaseRef = database.ref('Audios');\n    databaseRef.push({\n      src: srcAudio\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"test\",\n      onChange: handleChangeFiles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onUploadDatabase,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UploadFiles, \"klmmPRmGBTwDf0Xsx2AeSPWxc6o=\");\n\n_c = UploadFiles;\nexport default UploadFiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFiles\");","map":{"version":3,"sources":["D:/music-app/src/components/UploadFiles/index.jsx"],"names":["storage","database","useState","UploadFiles","files","setFiless","srcAudio","setSrcAudio","handleChangeFiles","e","target","onSave","uploadTask","ref","name","put","on","snapshot","error","console","log","child","getDownloadURL","then","url","onUploadDatabase","databaseRef","push","src"],"mappings":";;;;;AAAA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,sBAAlC;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,SAAR,IAAqBH,QAAQ,CAAC,IAAD,CAAnC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;;AACA,QAAMM,iBAAiB,GAAIC,CAAD,IAAO;AAC7B,QAAIA,CAAC,CAACC,MAAF,CAASN,KAAT,CAAe,CAAf,CAAJ,EAAuB;AACnBC,MAAAA,SAAS,CAACI,CAAC,CAACC,MAAF,CAASN,KAAT,CAAe,CAAf,CAAD,CAAT;AACH;AACJ,GAJD;;AAKA,QAAMO,MAAM,GAAG,MAAM;AACjB,UAAMC,UAAU,GAAGZ,OAAO,CAACa,GAAR,CAAa,UAAST,KAAK,CAACU,IAAK,EAAjC,EAAoCC,GAApC,CAAwCX,KAAxC,CAAnB;AACAQ,IAAAA,UAAU,CAACI,EAAX,CACI,eADJ,EAEIC,QAAQ,IAAI,CAAG,CAFnB,EAGIC,KAAK,IAAI;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,KAAnB;AACH,KALL,EAMI,MAAM;AACFlB,MAAAA,OAAO,CACFa,GADL,CACU,QADV,EAEKQ,KAFL,CAEWjB,KAAK,CAACU,IAFjB,EAGKQ,cAHL,GAIKC,IAJL,CAIUC,GAAG,IAAI;AACTjB,QAAAA,WAAW,CAACiB,GAAD,CAAX;AACH,OANL;AAOH,KAdL;AAgBH,GAlBD;;AAmBA,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,UAAMC,WAAW,GAAGzB,QAAQ,CAACY,GAAT,CAAa,QAAb,CAApB;AACAa,IAAAA,WAAW,CAACC,IAAZ,CAAiB;AACbC,MAAAA,GAAG,EAAEtB;AADQ,KAAjB;AAGH,GALD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,EAAE,EAAC,MAFP;AAGI,MAAA,QAAQ,EAAEE;AAHd;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AACI,MAAA,OAAO,EAAEG,MADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AACI,MAAA,OAAO,EAAEc,gBADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA/CQtB,W;;KAAAA,W;AAiDT,eAAeA,WAAf","sourcesContent":["import { storage, database } from '../../configFirebase';\r\nimport { useState } from 'react';\r\n\r\nfunction UploadFiles() {\r\n    const [files, setFiless] = useState(null);\r\n    const [srcAudio, setSrcAudio] = useState(null);\r\n    const handleChangeFiles = (e) => {\r\n        if (e.target.files[0]) {\r\n            setFiless(e.target.files[0]);\r\n        }\r\n    }\r\n    const onSave = () => {\r\n        const uploadTask = storage.ref(`Audios/${files.name}`).put(files);\r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            snapshot => { },\r\n            error => {\r\n                console.log('err', error);\r\n            },\r\n            () => {\r\n                storage\r\n                    .ref(`Audios`)\r\n                    .child(files.name)\r\n                    .getDownloadURL()\r\n                    .then(url => {\r\n                        setSrcAudio(url);\r\n                    })\r\n            }\r\n        )\r\n    }\r\n    const onUploadDatabase = () => {\r\n        const databaseRef = database.ref('Audios');\r\n        databaseRef.push({\r\n            src: srcAudio\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <input\r\n                type=\"file\"\r\n                id=\"test\"\r\n                onChange={handleChangeFiles} />\r\n            <button\r\n                onClick={onSave}\r\n            >Save</button>\r\n            <button\r\n                onClick={onUploadDatabase}\r\n            >Upload</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadFiles;\r\n"]},"metadata":{},"sourceType":"module"}