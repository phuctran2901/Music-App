{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\music-app\\\\src\\\\components\\\\UploadFiles\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { storage, database } from '../../configFirebase';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport { AiFillCloseCircle } from 'react-icons/ai';\nimport './style.css';\nimport { toast } from 'react-toastify';\nimport { IconContext } from 'react-icons/lib';\nUploadfiles.propTypes = {\n  toggleFormUpload: PropTypes.bool,\n  handleUploadSong: PropTypes.func,\n  handleToggleFormUpload: PropTypes.func\n};\nUploadfiles.default = {\n  toggleFormUpload: false,\n  handleUploadSong: null,\n  handleToggleFormUpload: null\n};\n\nfunction Uploadfiles(props) {\n  _s();\n\n  const [fileAudio, setfileAudio] = useState(null);\n  const [fileImage, setfileImage] = useState(null);\n  const [urlAudio, setUrlAudio] = useState(null);\n  const [urlImage, setUrlImage] = useState(null);\n  const [progessAudio, setProgessAudio] = useState(null);\n  const [progessImage, setProgessImage] = useState(null);\n  const [artistName, setAristName] = useState('');\n  const [audioName, setAudioName] = useState('');\n  const {\n    toggleFormUpload,\n    handleUploadSong,\n    handleToggleFormUpload\n  } = props;\n\n  const handleChangeFiles = e => {\n    if (e.target.name === \"fileAudio\") {\n      setfileAudio(e.target.files[0]);\n    }\n\n    if (e.target.name === \"fileImage\") {\n      setfileImage(e.target.files[0]);\n    }\n  };\n\n  const handleChangeText = e => {\n    if (e.target.name === 'audioName') {\n      setAudioName(e.target.value);\n    } else {\n      setAristName(e.target.value);\n    }\n  };\n\n  const handleSaveAudio = () => {\n    if (fileAudio) {\n      const uploadTask = storage.ref(`Audios/${fileAudio.name}`).put(fileAudio);\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progressBarAudio = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        setProgessAudio(progressBarAudio);\n      }, error => {\n        console.log('err', error);\n      }, () => {\n        storage.ref(`Audios`).child(fileAudio.name).getDownloadURL().then(urlAudio => {\n          setUrlAudio(urlAudio);\n        });\n      });\n    } else {\n      toast('Chọn file bạn muốn up!', {\n        position: \"top-left\",\n        autoClose: 4000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  };\n\n  const handleSaveImage = () => {\n    if (fileImage) {\n      const uploadTask = storage.ref(`Images/${fileImage.name}`).put(fileImage);\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progressBarImage = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        setProgessImage(progressBarImage);\n      }, error => {\n        console.log('err', error);\n      }, () => {\n        storage.ref(`Images`).child(fileImage.name).getDownloadURL().then(urlImage => {\n          setUrlImage(urlImage);\n        });\n      });\n    } else {\n      toast('Chọn file bạn muốn up!', {\n        position: \"top-left\",\n        autoClose: 4000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  };\n\n  const onUploadDatabase = () => {\n    const databaseRef = database.ref('Audios');\n\n    if (fileAudio && fileImage) {\n      if (urlAudio && urlImage) {\n        if (audioName && artistName) {\n          databaseRef.push({\n            src: urlAudio,\n            image: urlImage,\n            name: audioName,\n            artist: artistName\n          });\n          handleUploadSong({\n            src: urlAudio,\n            image: urlImage,\n            name: audioName,\n            artist: artistName\n          });\n          toast.success('Upload bài hát thành công!', {\n            position: \"top-left\",\n            autoClose: 4000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n          handleToggleFormUpload(false); // reset value\n\n          setAristName('');\n          setAudioName('');\n          setProgessAudio(0);\n          setProgessImage(0);\n        } else {\n          toast('Vui lòng nhập thông tin bài hát!', {\n            position: \"top-left\",\n            autoClose: 4000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n        }\n      } else {\n        toast('Tải file đã(hoặc chờ tải file)!', {\n          position: \"top-left\",\n          autoClose: 4000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      }\n    } else {\n      toast('Vui lòng up file!', {\n        position: \"top-left\",\n        autoClose: 4000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  };\n\n  const onToggleFormUpload = () => {\n    handleToggleFormUpload(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form-upload ${toggleFormUpload ? 'open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: onToggleFormUpload,\n      children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n        value: {\n          className: \"files-close\",\n          size: 30\n        },\n        children: /*#__PURE__*/_jsxDEV(AiFillCloseCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"files-title\",\n      children: \"Upload Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"files-audio\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"files-name\",\n        children: \"Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"fileAudio\",\n        accept: \".mp3\",\n        className: \"files-input\",\n        onChange: handleChangeFiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"files-button\",\n        onClick: handleSaveAudio,\n        children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n          value: {\n            size: 20,\n            color: '#ffffff'\n          },\n          children: /*#__PURE__*/_jsxDEV(FaCloudUploadAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          height: '8px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar progress-bar-striped \",\n          role: \"progressbar\",\n          \"aria-valuemin\": \"0\",\n          \"aria-valuemax\": \"100\",\n          style: {\n            width: `${progessAudio}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"files-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"files-name\",\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        accept: \".jpg\",\n        type: \"file\",\n        name: \"fileImage\",\n        className: \"files-input\",\n        onChange: handleChangeFiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"files-button\",\n        onClick: handleSaveImage,\n        children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n          value: {\n            size: 20,\n            color: '#ffffff'\n          },\n          children: /*#__PURE__*/_jsxDEV(FaCloudUploadAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          height: '8px',\n          Backgroundcolor: '#56184d'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#56184d'\n          },\n          className: \"progress-bar progress-bar-striped\",\n          role: \"progressbar\",\n          \"aria-valuemin\": \"0\",\n          \"aria-valuemax\": \"100\",\n          style: {\n            width: `${progessImage}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Artist Name\",\n        name: \"artistName\",\n        className: \"files-text\",\n        value: artistName,\n        onChange: handleChangeText,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Audio Name\",\n        onChange: handleChangeText,\n        name: \"audioName\",\n        value: audioName,\n        className: \"files-text\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"files-button__upload\",\n        onClick: onUploadDatabase,\n        children: \"L\\u01B0u l\\u1EA1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Uploadfiles, \"NaL64PTONQhcd0RTbTcxBmED/GQ=\");\n\n_c = Uploadfiles;\nexport default Uploadfiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Uploadfiles\");","map":{"version":3,"sources":["D:/music-app/src/components/UploadFiles/index.jsx"],"names":["React","useState","PropTypes","storage","database","FaCloudUploadAlt","AiFillCloseCircle","toast","IconContext","Uploadfiles","propTypes","toggleFormUpload","bool","handleUploadSong","func","handleToggleFormUpload","default","props","fileAudio","setfileAudio","fileImage","setfileImage","urlAudio","setUrlAudio","urlImage","setUrlImage","progessAudio","setProgessAudio","progessImage","setProgessImage","artistName","setAristName","audioName","setAudioName","handleChangeFiles","e","target","name","files","handleChangeText","value","handleSaveAudio","uploadTask","ref","put","on","snapshot","progressBarAudio","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleSaveImage","progressBarImage","onUploadDatabase","databaseRef","push","src","image","artist","success","onToggleFormUpload","className","size","color","height","width","Backgroundcolor","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { storage, database } from '../../configFirebase';\r\nimport { FaCloudUploadAlt } from 'react-icons/fa';\r\nimport {\r\n    AiFillCloseCircle,\r\n} from 'react-icons/ai';\r\nimport './style.css';\r\nimport { toast } from 'react-toastify';\r\nimport { IconContext } from 'react-icons/lib';\r\n\r\nUploadfiles.propTypes = {\r\n    toggleFormUpload: PropTypes.bool,\r\n    handleUploadSong: PropTypes.func,\r\n    handleToggleFormUpload: PropTypes.func,\r\n}\r\nUploadfiles.default = {\r\n    toggleFormUpload: false,\r\n    handleUploadSong: null,\r\n    handleToggleFormUpload: null\r\n}\r\n\r\nfunction Uploadfiles(props) {\r\n    const [fileAudio, setfileAudio] = useState(null);\r\n    const [fileImage, setfileImage] = useState(null);\r\n    const [urlAudio, setUrlAudio] = useState(null);\r\n    const [urlImage, setUrlImage] = useState(null);\r\n    const [progessAudio, setProgessAudio] = useState(null);\r\n    const [progessImage, setProgessImage] = useState(null);\r\n    const [artistName, setAristName] = useState('');\r\n    const [audioName, setAudioName] = useState('');\r\n    const { toggleFormUpload, handleUploadSong, handleToggleFormUpload } = props;\r\n    const handleChangeFiles = (e) => {\r\n        if (e.target.name === \"fileAudio\") {\r\n            setfileAudio(e.target.files[0])\r\n        }\r\n        if (e.target.name === \"fileImage\") {\r\n            setfileImage(e.target.files[0])\r\n        }\r\n    }\r\n    const handleChangeText = (e) => {\r\n        if (e.target.name === 'audioName') {\r\n            setAudioName(e.target.value);\r\n        } else {\r\n            setAristName(e.target.value);\r\n        }\r\n    }\r\n    const handleSaveAudio = () => {\r\n        if (fileAudio) {\r\n            const uploadTask = storage.ref(`Audios/${fileAudio.name}`).put(fileAudio);\r\n            uploadTask.on(\r\n                \"state_changed\",\r\n                (snapshot) => {\r\n                    const progressBarAudio = Math.round(\r\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                    );\r\n                    setProgessAudio(progressBarAudio);\r\n                },\r\n                error => {\r\n                    console.log('err', error);\r\n                },\r\n                () => {\r\n                    storage\r\n                        .ref(`Audios`)\r\n                        .child(fileAudio.name)\r\n                        .getDownloadURL()\r\n                        .then(urlAudio => {\r\n                            setUrlAudio(urlAudio);\r\n                        })\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            toast('Chọn file bạn muốn up!', {\r\n                position: \"top-left\",\r\n                autoClose: 4000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n            })\r\n        }\r\n    }\r\n    const handleSaveImage = () => {\r\n        if (fileImage) {\r\n            const uploadTask = storage.ref(`Images/${fileImage.name}`).put(fileImage);\r\n            uploadTask.on(\r\n                \"state_changed\",\r\n                (snapshot) => {\r\n                    const progressBarImage = Math.round(\r\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                    );\r\n                    setProgessImage(progressBarImage);\r\n                },\r\n                error => {\r\n                    console.log('err', error);\r\n                },\r\n                () => {\r\n                    storage\r\n                        .ref(`Images`)\r\n                        .child(fileImage.name)\r\n                        .getDownloadURL()\r\n                        .then(urlImage => {\r\n                            setUrlImage(urlImage);\r\n                        })\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            toast('Chọn file bạn muốn up!', {\r\n                position: \"top-left\",\r\n                autoClose: 4000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n            })\r\n        }\r\n    }\r\n    const onUploadDatabase = () => {\r\n        const databaseRef = database.ref('Audios');\r\n        if (fileAudio && fileImage) {\r\n            if (urlAudio && urlImage) {\r\n                if (audioName && artistName) {\r\n                    databaseRef.push({\r\n                        src: urlAudio,\r\n                        image: urlImage,\r\n                        name: audioName,\r\n                        artist: artistName\r\n                    })\r\n                    handleUploadSong({\r\n                        src: urlAudio,\r\n                        image: urlImage,\r\n                        name: audioName,\r\n                        artist: artistName\r\n                    })\r\n                    toast.success('Upload bài hát thành công!', {\r\n                        position: \"top-left\",\r\n                        autoClose: 4000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined\r\n                    })\r\n                    handleToggleFormUpload(false);\r\n                    // reset value\r\n                    setAristName('')\r\n                    setAudioName('')\r\n                    setProgessAudio(0)\r\n                    setProgessImage(0)\r\n                }\r\n                else {\r\n                    toast('Vui lòng nhập thông tin bài hát!', {\r\n                        position: \"top-left\",\r\n                        autoClose: 4000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined\r\n                    })\r\n                }\r\n            }\r\n            else {\r\n                toast('Tải file đã(hoặc chờ tải file)!', {\r\n                    position: \"top-left\",\r\n                    autoClose: 4000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined\r\n                })\r\n            }\r\n        } else {\r\n            toast('Vui lòng up file!', {\r\n                position: \"top-left\",\r\n                autoClose: 4000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            }\r\n            );\r\n        }\r\n    }\r\n    const onToggleFormUpload = () => {\r\n        handleToggleFormUpload(false);\r\n    }\r\n    return (\r\n        <div className={`form-upload ${toggleFormUpload ? 'open' : ''}`}>\r\n            <div onClick={onToggleFormUpload}>\r\n                <IconContext.Provider value={{ className: \"files-close\", size: 30 }}>\r\n                    <AiFillCloseCircle />\r\n                </IconContext.Provider>\r\n            </div>\r\n            <p className=\"files-title\">Upload Files</p>\r\n            <div className=\"files-audio\">\r\n                <span className=\"files-name\">Audio</span>\r\n                <input\r\n                    type=\"file\"\r\n                    name=\"fileAudio\"\r\n                    accept=\".mp3\"\r\n                    className=\"files-input\"\r\n                    onChange={handleChangeFiles} />\r\n                <button\r\n                    className=\"files-button\"\r\n                    onClick={handleSaveAudio}\r\n                >\r\n                    <IconContext.Provider value={{ size: 20, color: '#ffffff' }}>\r\n                        <FaCloudUploadAlt />\r\n                    </IconContext.Provider>\r\n                </button>\r\n                <div className=\"progress\" style={{ height: '8px', }}>\r\n                    <div\r\n                        className=\"progress-bar progress-bar-striped \"\r\n                        role=\"progressbar\"\r\n                        aria-valuemin=\"0\"\r\n                        aria-valuemax=\"100\"\r\n                        style={{ width: `${progessAudio}%` }}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"files-image\">\r\n                <span className=\"files-name\">Image</span>\r\n                <input\r\n                    accept=\".jpg\"\r\n                    type=\"file\"\r\n                    name=\"fileImage\"\r\n                    className=\"files-input\"\r\n                    onChange={handleChangeFiles} />\r\n                <button\r\n                    className=\"files-button\"\r\n                    onClick={handleSaveImage}\r\n                >\r\n                    <IconContext.Provider value={{ size: 20, color: '#ffffff' }}>\r\n                        <FaCloudUploadAlt />\r\n                    </IconContext.Provider>\r\n                </button>\r\n                <div className=\"progress\" style={{ height: '8px', Backgroundcolor: '#56184d' }}>\r\n                    <div\r\n                        style={{ backgroundColor: '#56184d' }}\r\n                        className=\"progress-bar progress-bar-striped\"\r\n                        role=\"progressbar\"\r\n                        aria-valuemin=\"0\"\r\n                        aria-valuemax=\"100\"\r\n                        style={{ width: `${progessImage}%` }}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"wrapper-upload\">\r\n                <input\r\n                    placeholder=\"Artist Name\"\r\n                    name=\"artistName\"\r\n                    className=\"files-text\"\r\n                    value={artistName}\r\n                    onChange={handleChangeText}\r\n                    type=\"text\" />\r\n                <input\r\n                    placeholder=\"Audio Name\"\r\n                    onChange={handleChangeText}\r\n                    name=\"audioName\"\r\n                    value={audioName}\r\n                    className=\"files-text\"\r\n                    type=\"text\" />\r\n                <button\r\n                    className=\"files-button__upload\"\r\n                    onClick={onUploadDatabase}\r\n                >Lưu lại\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Uploadfiles;"]},"metadata":{},"sourceType":"module"}