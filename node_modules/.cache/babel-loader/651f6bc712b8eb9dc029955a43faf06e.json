{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\music-app\\\\src\\\\components\\\\UploadFiles\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { storage, database } from '../../configFirebase';\nimport { FaCloudDownloadAlt } from 'react-icons/fa';\nimport './style.css';\n\nclass UploadFiles extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeFiles = e => {\n      if (e.target.name === \"filesAudio\" || e.target.name === \"filesImage\") {\n        this.setState({\n          [e.target.name]: e.target.files[0]\n        });\n      } else {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n      }\n    };\n\n    this.handleSaveAudio = () => {\n      const uploadTask = storage.ref(`Audios/${this.state.filesAudio.name}`).put(this.state.filesAudio);\n      uploadTask.on(\"state_changed\", snapshot => {}, error => {\n        console.log('err', error);\n      }, () => {\n        storage.ref(`Audios`).child(this.state.filesAudio.name).getDownloadURL().then(urlAudio => {\n          this.setState = {\n            urlAudio\n          };\n        });\n      });\n    };\n\n    this.handleSaveImage = () => {\n      const uploadTask = storage.ref(`Images/${this.state.filesImage.name}`).put(this.state.filesImage);\n      uploadTask.on(\"state_changed\", snapshot => {}, error => {\n        console.log('err', error);\n      }, () => {\n        storage.ref(`Images`).child(this.state.filesImage.name).getDownloadURL().then(urlImage => {\n          this.setState = {\n            urlImage\n          };\n        });\n      });\n    };\n\n    this.onUploadDatabase = () => {\n      const databaseRef = database.ref('Audios');\n      databaseRef.push({});\n    };\n\n    this.state = {\n      filesAudio: null,\n      filesImage: null,\n      ArtistName: '',\n      AudioName: '',\n      progressBar: 0,\n      urlAudio: null,\n      urlImage: null\n    };\n  }\n\n  render() {\n    const {\n      filesAudio,\n      urlAudio,\n      ArtistName,\n      AudioName\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"files-title\",\n        children: \"Upload Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper-audio\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"filesAudio\",\n          className: \"files-input\",\n          onChange: this.handleChangeFiles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"files-button\",\n          onClick: this.handleSaveAudio,\n          children: /*#__PURE__*/_jsxDEV(Context.Provider, {\n            children: /*#__PURE__*/_jsxDEV(FaCloudDownloadAlt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper-image\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"filesImage\",\n          className: \"files-input\",\n          onChange: this.handleChangeFiles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"files-button\",\n          onClick: this.handleSaveImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Artist Name\",\n          onChange: this.handleChangeFiles,\n          value: this.state.ArtistName,\n          name: \"ArtistName\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Audio Name\",\n          value: this.state.AudioName,\n          onChange: this.handleChangeFiles,\n          name: \"AudioName\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onUploadDatabase,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UploadFiles;","map":{"version":3,"sources":["D:/music-app/src/components/UploadFiles/index.jsx"],"names":["React","Component","storage","database","FaCloudDownloadAlt","UploadFiles","constructor","props","handleChangeFiles","e","target","name","setState","files","value","handleSaveAudio","uploadTask","ref","state","filesAudio","put","on","snapshot","error","console","log","child","getDownloadURL","then","urlAudio","handleSaveImage","filesImage","urlImage","onUploadDatabase","databaseRef","push","ArtistName","AudioName","progressBar","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { storage, database } from '../../configFirebase';\r\nimport { FaCloudDownloadAlt } from 'react-icons/fa';\r\nimport './style.css';\r\nclass UploadFiles extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filesAudio: null,\r\n            filesImage: null,\r\n            ArtistName: '',\r\n            AudioName: '',\r\n            progressBar: 0,\r\n            urlAudio: null,\r\n            urlImage: null\r\n        }\r\n    }\r\n    handleChangeFiles = (e) => {\r\n        if (e.target.name === \"filesAudio\" || e.target.name === \"filesImage\") {\r\n            this.setState({\r\n                [e.target.name]: e.target.files[0]\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n    }\r\n    handleSaveAudio = () => {\r\n        const uploadTask = storage.ref(`Audios/${this.state.filesAudio.name}`).put(this.state.filesAudio);\r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            snapshot => { },\r\n            error => {\r\n                console.log('err', error);\r\n            },\r\n            () => {\r\n                storage\r\n                    .ref(`Audios`)\r\n                    .child(this.state.filesAudio.name)\r\n                    .getDownloadURL()\r\n                    .then(urlAudio => {\r\n                        this.setState = {\r\n                            urlAudio\r\n                        }\r\n                    })\r\n            }\r\n        )\r\n    }\r\n    handleSaveImage = () => {\r\n        const uploadTask = storage.ref(`Images/${this.state.filesImage.name}`).put(this.state.filesImage);\r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            snapshot => { },\r\n            error => {\r\n                console.log('err', error);\r\n            },\r\n            () => {\r\n                storage\r\n                    .ref(`Images`)\r\n                    .child(this.state.filesImage.name)\r\n                    .getDownloadURL()\r\n                    .then(urlImage => {\r\n                        this.setState = {\r\n                            urlImage\r\n                        }\r\n                    })\r\n            }\r\n        )\r\n    }\r\n    onUploadDatabase = () => {\r\n        const databaseRef = database.ref('Audios');\r\n        databaseRef.push({\r\n\r\n        })\r\n    }\r\n    render() {\r\n        const { filesAudio, urlAudio, ArtistName, AudioName } = this.state;\r\n        return (\r\n            <div className=\"form-upload\">\r\n                <p className=\"files-title\">Upload Files</p>\r\n                <div className=\"wrapper-audio\">\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"filesAudio\"\r\n                        className=\"files-input\"\r\n                        onChange={this.handleChangeFiles} />\r\n                    <button\r\n                        className=\"files-button\"\r\n                        onClick={this.handleSaveAudio}\r\n                    >\r\n                        <Context.Provider>\r\n                            <FaCloudDownloadAlt />\r\n                        </Context.Provider>\r\n\r\n                    </button>\r\n                </div>\r\n                <div className=\"wrapper-image\">\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"filesImage\"\r\n                        className=\"files-input\"\r\n                        onChange={this.handleChangeFiles} />\r\n                    <button\r\n                        className=\"files-button\"\r\n                        onClick={this.handleSaveImage}\r\n                    >\r\n\r\n                    </button>\r\n                </div>\r\n                <div className=\"wrapper-upload\">\r\n                    <input\r\n                        placeholder=\"Artist Name\"\r\n                        onChange={this.handleChangeFiles}\r\n                        value={this.state.ArtistName}\r\n                        name=\"ArtistName\"\r\n                        type=\"text\" />\r\n                    <input\r\n                        placeholder=\"Audio Name\"\r\n                        value={this.state.AudioName}\r\n                        onChange={this.handleChangeFiles}\r\n                        name=\"AudioName\"\r\n                        type=\"text\" />\r\n                    <button\r\n                        onClick={this.onUploadDatabase}\r\n                    >Upload</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UploadFiles;"]},"metadata":{},"sourceType":"module"}