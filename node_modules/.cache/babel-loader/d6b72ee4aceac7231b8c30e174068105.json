{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\music-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport UploadFiles from './components/UploadFiles';\nimport AudioItems from './components/AudioItems';\nimport TimeSlider from 'react-input-slider';\nimport { database } from './configFirebase';\nimport { AiOutlinePauseCircle, AiOutlinePlayCircle, AiOutlineCloseCircle } from 'react-icons/ai';\nimport { BiSkipNextCircle, BiSkipPreviousCircle } from 'react-icons/bi';\nimport { CgMenuGridR } from 'react-icons/cg';\nimport { IconContext } from 'react-icons/lib';\nconst databaseRef = database.ref('Audios');\n\nconst findIndex = (id, array) => {\n  let result = -1;\n  array.forEach((ob, index) => {\n    if (ob.id === id) {\n      result = index;\n    }\n  });\n  return result;\n};\n\nfunction App() {\n  _s();\n\n  const audioRef = useRef();\n  const [playAndPauseAudio, setplayAndPauseAudio] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [index, setIndex] = useState(0);\n  const [activeID, setActiveID] = useState(0);\n  const [toggleListAudio, setToggleListAudio] = useState(true);\n  const [audios, setAudios] = useState([{\n    src: '',\n    image: '',\n    title: 'Vui lòng chờ',\n    artist: '',\n    id: 0\n  }]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        databaseRef.once('value').then(res => {\n          const data = [];\n          const keys = Object.keys(res.val());\n          const values = Object.values(res.val());\n          keys.map((key, index) => {\n            values[index].id = key;\n            data.push(values[index]);\n            return data;\n          });\n          setAudios(data);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    ;\n    fetchData();\n  }, []);\n\n  const handleOnChangeSlider = ({\n    x\n  }) => {\n    audioRef.current.currentTime = x;\n    setCurrentTime(x);\n\n    if (!playAndPauseAudio) {\n      setplayAndPauseAudio(true);\n      audioRef.current.play();\n    }\n  };\n\n  const onClickAudio = () => {\n    if (!playAndPauseAudio) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n\n    setplayAndPauseAudio(!playAndPauseAudio);\n  };\n\n  const handleOnLoadedData = () => {\n    setDuration(audioRef.current.duration);\n\n    if (playAndPauseAudio) {\n      audioRef.current.play();\n    }\n  };\n\n  const renderTime = () => {\n    let html = null;\n    let cMinute = Math.floor(currentTime / 60);\n    let cSecond = Math.floor(currentTime % 60);\n    let dMinute = Math.floor(duration / 60);\n    let dSecond = Math.floor(duration % 60);\n    let cTime = `${cMinute} : ${cSecond < 10 ? `0${cSecond}` : `${cSecond}`}`;\n    let dTime = `${dMinute} : ${dSecond < 10 ? `0${dSecond}` : `${dSecond}`}`;\n    html = `${cTime} / ${dTime}`;\n    return html;\n  };\n\n  const selectIndex = id => {\n    let index = findIndex(id, audios);\n\n    if (index != -1) {\n      setIndex(index);\n      setActiveID(index);\n    }\n  };\n\n  const onToggleListAudio = () => {\n    setToggleListAudio(!toggleListAudio);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-w\",\n    children: [!toggleListAudio ? /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: onToggleListAudio,\n      children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n        value: {\n          size: 40,\n          color: 'white',\n          className: 'icon-open active'\n        },\n        children: /*#__PURE__*/_jsxDEV(CgMenuGridR, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-audio\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: `audio-img ${playAndPauseAudio ? 'active' : ''}`,\n        src: audios[index].image,\n        alt: audios[0].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"audio-name\",\n        children: audios[index].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"audio-artist\",\n        children: audios[index].artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: audios[index].src,\n        onLoadedData: handleOnLoadedData,\n        onTimeUpdate: () => {\n          setCurrentTime(audioRef.current.currentTime);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"audio-time\",\n        children: renderTime()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"audio-button\",\n          children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n            value: {\n              size: 40\n            },\n            children: /*#__PURE__*/_jsxDEV(BiSkipPreviousCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"audio-button\",\n          onClick: onClickAudio,\n          children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n            value: {\n              size: 40\n            },\n            children: playAndPauseAudio ? /*#__PURE__*/_jsxDEV(AiOutlinePauseCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 50\n            }, this) : /*#__PURE__*/_jsxDEV(AiOutlinePlayCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 77\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"audio-button\",\n          children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n            value: {\n              size: 40\n            },\n            children: /*#__PURE__*/_jsxDEV(BiSkipNextCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TimeSlider, {\n        axis: \"x\",\n        xmin: 0,\n        x: currentTime,\n        xmax: duration,\n        onChange: handleOnChangeSlider,\n        styles: {\n          track: {\n            backgroundColor: \"#e3e3e3\",\n            height: \"8px\",\n            width: \"400px\"\n          },\n          active: {\n            backgroundColor: \"black\",\n            height: \"8px\"\n          },\n          thumb: {\n            width: \"20px\",\n            height: \"20px\",\n            backgroundColor: \"#e183e3\",\n            borderRadius: '50px'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `wrapper-song ${toggleListAudio ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: onToggleListAudio,\n        children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n          value: {\n            size: 40,\n            color: \"white\",\n            className: \"icon-close\"\n          },\n          children: /*#__PURE__*/_jsxDEV(AiOutlineCloseCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-song\",\n        children: \"List Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AudioItems, {\n        active: activeID,\n        data: audios,\n        handleSaveIndex: selectIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UploadFiles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"mbyObNo3IwE2QRvJrwcLwOAtftc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/music-app/src/App.js"],"names":["useEffect","useRef","useState","UploadFiles","AudioItems","TimeSlider","database","AiOutlinePauseCircle","AiOutlinePlayCircle","AiOutlineCloseCircle","BiSkipNextCircle","BiSkipPreviousCircle","CgMenuGridR","IconContext","databaseRef","ref","findIndex","id","array","result","forEach","ob","index","App","audioRef","playAndPauseAudio","setplayAndPauseAudio","currentTime","setCurrentTime","duration","setDuration","setIndex","activeID","setActiveID","toggleListAudio","setToggleListAudio","audios","setAudios","src","image","title","artist","fetchData","once","then","res","data","keys","Object","val","values","map","key","push","err","console","log","handleOnChangeSlider","x","current","play","onClickAudio","pause","handleOnLoadedData","renderTime","html","cMinute","Math","floor","cSecond","dMinute","dSecond","cTime","dTime","selectIndex","onToggleListAudio","size","color","className","name","track","backgroundColor","height","width","active","thumb","borderRadius"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport UploadFiles from './components/UploadFiles';\nimport AudioItems from './components/AudioItems';\nimport TimeSlider from 'react-input-slider';\nimport { database } from './configFirebase';\nimport {\n    AiOutlinePauseCircle,\n    AiOutlinePlayCircle,\n    AiOutlineCloseCircle\n} from 'react-icons/ai';\nimport {\n    BiSkipNextCircle,\n    BiSkipPreviousCircle\n} from 'react-icons/bi';\nimport { CgMenuGridR } from 'react-icons/cg';\nimport { IconContext } from 'react-icons/lib';\n\nconst databaseRef = database.ref('Audios');\n\nconst findIndex = (id, array) => {\n    let result = -1;\n    array.forEach((ob, index) => {\n        if (ob.id === id) {\n            result = index;\n        }\n    });\n    return result;\n}\n\nfunction App() {\n    const audioRef = useRef();\n    const [playAndPauseAudio, setplayAndPauseAudio] = useState(false);\n    const [currentTime, setCurrentTime] = useState(0);\n    const [duration, setDuration] = useState(0);\n    const [index, setIndex] = useState(0);\n    const [activeID, setActiveID] = useState(0);\n    const [toggleListAudio, setToggleListAudio] = useState(true);\n    const [audios, setAudios] = useState([\n        {\n            src: '',\n            image: '',\n            title: 'Vui lòng chờ',\n            artist: '',\n            id: 0\n        }\n    ])\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                databaseRef.once('value').then(res => {\n                    const data = [];\n                    const keys = Object.keys(res.val());\n                    const values = Object.values(res.val());\n                    keys.map((key, index) => {\n                        values[index].id = key;\n                        data.push(values[index]);\n                        return data;\n                    })\n                    setAudios(data);\n                })\n            }\n            catch (err) {\n                console.log(err);\n            }\n        };\n        fetchData();\n    }, [])\n    const handleOnChangeSlider = ({ x }) => {\n        audioRef.current.currentTime = x;\n        setCurrentTime(x);\n        if (!playAndPauseAudio) {\n            setplayAndPauseAudio(true);\n            audioRef.current.play();\n        }\n    }\n    const onClickAudio = () => {\n        if (!playAndPauseAudio) {\n            audioRef.current.play();\n        }\n        else {\n            audioRef.current.pause();\n        }\n        setplayAndPauseAudio(!playAndPauseAudio);\n    }\n    const handleOnLoadedData = () => {\n        setDuration(audioRef.current.duration);\n        if (playAndPauseAudio) {\n            audioRef.current.play();\n        }\n    }\n    const renderTime = () => {\n        let html = null;\n        let cMinute = Math.floor(currentTime / 60);\n        let cSecond = Math.floor(currentTime % 60);\n        let dMinute = Math.floor(duration / 60);\n        let dSecond = Math.floor(duration % 60);\n        let cTime = `${cMinute} : ${cSecond < 10 ? `0${cSecond}` : `${cSecond}`\n            }`;\n        let dTime = `${dMinute} : ${dSecond < 10 ? `0${dSecond}` : `${dSecond}`\n            }`;\n        html = `${cTime} / ${dTime}`;\n        return html;\n    }\n    const selectIndex = (id) => {\n        let index = findIndex(id, audios);\n        if (index != -1) {\n            setIndex(index);\n            setActiveID(index);\n        }\n    }\n    const onToggleListAudio = () => {\n        setToggleListAudio(!toggleListAudio);\n    }\n    return (\n        <div className=\"container-w\">\n            {!toggleListAudio ? <div onClick={onToggleListAudio}>\n                <IconContext.Provider value={{ size: 40, color: 'white', className: 'icon-open active' }}>\n                    <CgMenuGridR />\n                </IconContext.Provider>\n            </div> : ''}\n            <div className=\"wrapper-audio\">\n                <img className={`audio-img ${playAndPauseAudio ? 'active' : ''}`} src={audios[index].image} alt={audios[0].name} />\n                <p className=\"audio-name\">{audios[index].name}</p>\n                <p className=\"audio-artist\">{audios[index].artist}</p>\n                <audio\n                    ref={audioRef}\n                    src={audios[index].src}\n                    onLoadedData={handleOnLoadedData}\n                    onTimeUpdate={() => {\n                        setCurrentTime(audioRef.current.currentTime)\n                    }}\n                ></audio>\n                <p className=\"audio-time\">\n                    {renderTime()}\n                </p>\n                <div className=\"audio-controls\">\n                    <button className=\"audio-button\" >\n                        <IconContext.Provider value={{ size: 40 }}>\n                            <BiSkipPreviousCircle />\n                        </IconContext.Provider>\n                    </button>\n                    <button className=\"audio-button\" onClick={onClickAudio}>\n                        <IconContext.Provider value={{ size: 40 }}>\n                            {playAndPauseAudio ? <AiOutlinePauseCircle /> : <AiOutlinePlayCircle />}\n                        </IconContext.Provider>\n                    </button>\n                    <button className=\"audio-button\" >\n                        <IconContext.Provider value={{ size: 40 }}>\n                            <BiSkipNextCircle />\n                        </IconContext.Provider>\n                    </button>\n                </div>\n                <TimeSlider\n                    axis=\"x\"\n                    xmin={0}\n                    x={currentTime}\n                    xmax={duration}\n                    onChange={handleOnChangeSlider}\n                    styles={{\n                        track: {\n                            backgroundColor: \"#e3e3e3\",\n                            height: \"8px\",\n                            width: \"400px\"\n                        },\n                        active: {\n                            backgroundColor: \"black\",\n                            height: \"8px\",\n                        },\n                        thumb: {\n                            width: \"20px\",\n                            height: \"20px\",\n                            backgroundColor: \"#e183e3\",\n                            borderRadius: '50px',\n                        },\n                    }}\n                />\n            </div>\n            <div className={`wrapper-song ${toggleListAudio ? 'active' : ''}`}>\n                <div onClick={onToggleListAudio}>\n                    <IconContext.Provider value={{ size: 40, color: \"white\", className: \"icon-close\" }}>\n                        <AiOutlineCloseCircle />\n                    </IconContext.Provider>\n                </div>\n                <p className=\"title-song\">List Audio</p>\n                <AudioItems\n                    active={activeID}\n                    data={audios}\n                    handleSaveIndex={selectIndex}\n                />\n                <UploadFiles />\n            </div>\n        </div>\n\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}